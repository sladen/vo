Description: Update to cope with Vector to ArrayList in SAVOTv4
 The internal storage structure in the GPLed SAVOT v4 release uses
 ArrayList instead of Vector, which lacks the built-in '.elements()'
 method.  This can hopefully be replaced by using
 Collections.enumeration() to generation the iterator.
Author: Paul Sladen <debian@paul.sladen.org>
Last-Update: 2016-07-05
diff --git a/cds/aladin/SIAPExtBuilder.java b/cds/aladin/SIAPExtBuilder.java
index 54a8ba2..8b108c5 100644
--- a/cds/aladin/SIAPExtBuilder.java
+++ b/cds/aladin/SIAPExtBuilder.java
@@ -292,7 +292,7 @@ public class SIAPExtBuilder extends TreeBuilder {
 
 		if( trs.getItemCount()==0 ) return;
 
-		Enumeration e = trs.getItems().elements();
+		Enumeration e = Collections.enumeration(trs.getItems());
 		String keyVal;
 		ResourceNode node, parentNode;
 
@@ -348,7 +348,7 @@ public class SIAPExtBuilder extends TreeBuilder {
 	    TRSet trSet = dataAccessTab.getData().getTableData().getTRs();
 	    if( trSet.getItems()==null ) return;
 
-	    Enumeration e = trSet.getItems().elements();
+	    Enumeration e = Collections.enumeration(trSet.getItems());
 
 	    String obsRef, relatedObs;
 	    ResourceNode parent;
@@ -476,7 +476,7 @@ public class SIAPExtBuilder extends TreeBuilder {
 
 	    TRSet trSet = compositionTab.getData().getTableData().getTRs();
 	    SavotTR tr;
-	    Enumeration e = trSet.getItems().elements();
+	    Enumeration e = Collections.enumeration(trSet.getItems());
 	    String obsRef, relatedObs;
 	    ResourceNode parent;
 	    ResourceNode curMembersNode;
@@ -541,7 +541,7 @@ public class SIAPExtBuilder extends TreeBuilder {
 
 	    TRSet trSet = characTab.getData().getTableData().getTRs();
 	    SavotTR tr;
-	    Enumeration e = trSet.getItems().elements();
+	    Enumeration e = Collections.enumeration(trSet.getItems());
 	    String obsRef;
 	    ResourceNode curInfoNode;
 
diff --git a/cds/aladin/TreeBuilder.java b/cds/aladin/TreeBuilder.java
index a3dac94..fc3dcd8 100644
--- a/cds/aladin/TreeBuilder.java
+++ b/cds/aladin/TreeBuilder.java
@@ -266,8 +266,7 @@ public class TreeBuilder {
         	return false;
         }
 
-//        Enumeration<SavotField> fields = firstRes.getFieldSet(0).getItems().elements();
-        Enumeration<Object> fields = firstRes.getFieldSet(0).getItems().elements();
+        Enumeration<SavotField> fields = Collections.enumeration(firstRes.getFieldSet(0).getItems());
         SavotField curField;
         String curUtype, curUCD;
         // TODO : pour distinguer vraiment SSAP de SIAP, on pourrait peut-etre se baser sur le namespace
@@ -315,7 +314,7 @@ public class TreeBuilder {
         if( firstRes.getTableCount()>0 ) {
         	FieldSet fSet = firstRes.getFieldSet(0);
         	if( fSet!=null && fSet.getItems()!=null ) {
-        		Enumeration e = fSet.getItems().elements();
+			Enumeration e = Collections.enumeration(fSet.getItems());
         		while( e.hasMoreElements() ) {
         			if( ((SavotField)e.nextElement()).getUtype().equalsIgnoreCase(FOOTPRINT_REF_UTYPE) ) {
         				type = SIAP_EXT;
