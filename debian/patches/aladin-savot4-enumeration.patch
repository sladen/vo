Description: Update to cope with Vector to ArrayList in SAVOTv4
 The internal storage structure in the GPLed SAVOT v4 release uses
 ArrayList instead of Vector, which lacks the built-in '.elements()'
 method. So, we now use iterators instead of enumerations here.
Author: Paul Sladen <debian@paul.sladen.org>, Ole Streicher <olebole@debian.org>
Last-Update: 2016-11-05
--- a/cds/aladin/SIAPExtBuilder.java
+++ b/cds/aladin/SIAPExtBuilder.java
@@ -292,13 +292,12 @@
 
 		if( trs.getItemCount()==0 ) return;
 
-		Enumeration e = trs.getItems().elements();
 		String keyVal;
 		ResourceNode node, parentNode;
 
 	    // boucle sur les TR
-	    while( e.hasMoreElements() ) {
-	        tr = (SavotTR)e.nextElement();
+	    for( Iterator i = trs.getItems().iterator(); i.hasNext(); ) {
+	        tr = (SavotTR)i.next();
 	        tds = tr.getTDs();
 
 	        keyVal = tds.getContent(obsRefIndex);
@@ -348,8 +347,6 @@
 	    TRSet trSet = dataAccessTab.getData().getTableData().getTRs();
 	    if( trSet.getItems()==null ) return;
 
-	    Enumeration e = trSet.getItems().elements();
-
 	    String obsRef, relatedObs;
 	    ResourceNode parent;
 	    Vector children;
@@ -377,8 +374,8 @@
         SavotTR tr;
 
 	    // boucle sur les TR
-	    while( e.hasMoreElements() ) {
-	        tr = (SavotTR)e.nextElement();
+	for( Iterator i = trSet.getItems().iterator(); i.hasNext(); ) {
+	        tr = (SavotTR)i.next();
 	        tds = tr.getTDs();
 	        obsRef = tds.getContent(obsRefIndex);
 //	        System.out.println("obsref : "+obsRef);
@@ -476,15 +473,14 @@
 
 	    TRSet trSet = compositionTab.getData().getTableData().getTRs();
 	    SavotTR tr;
-	    Enumeration e = trSet.getItems().elements();
 	    String obsRef, relatedObs;
 	    ResourceNode parent;
 	    ResourceNode curMembersNode;
 	    Vector children;
 
 	    // boucle sur les TR
-	    while( e.hasMoreElements() ) {
-	        tr = (SavotTR)e.nextElement();
+	    for( Iterator i = trSet.getItems().iterator(); i.hasNext(); ) {
+	        tr = (SavotTR)i.next();
 	        obsRef = ((SavotTD)(tr.getTDs().getItemAt(obsRefIndex))).getContent();
 	        parent = (ResourceNode)namesToNodes.get(obsRef);
 
@@ -541,12 +537,11 @@
 
 	    TRSet trSet = characTab.getData().getTableData().getTRs();
 	    SavotTR tr;
-	    Enumeration e = trSet.getItems().elements();
 	    String obsRef;
 	    ResourceNode curInfoNode;
 
-	    while( e.hasMoreElements() ) {
-	        tr = (SavotTR)e.nextElement();
+	    for( Iterator i = trSet.getItems().iterator(); i.hasNext(); ) {
+	        tr = (SavotTR)i.next();
 
 	        obsRef = ((SavotTD)(tr.getTDs().getItemAt(obsRefIndex))).getContent();
 	        ResourceNode parent = (ResourceNode)namesToNodes.get(obsRef);
--- a/cds/aladin/TreeBuilder.java
+++ b/cds/aladin/TreeBuilder.java
@@ -266,13 +266,11 @@
         	return false;
         }
 
-//        Enumeration<SavotField> fields = firstRes.getFieldSet(0).getItems().elements();
-        Enumeration<Object> fields = firstRes.getFieldSet(0).getItems().elements();
         SavotField curField;
         String curUtype, curUCD;
         // TODO : pour distinguer vraiment SSAP de SIAP, on pourrait peut-etre se baser sur le namespace
-        while( fields.hasMoreElements() ) {
-            curField = (SavotField)fields.nextElement();
+        for( Iterator i = firstRes.getFieldSet(0).getItems().iterator(); i.hasNext(); ) {
+            curField = (SavotField)i.next();
             curUtype = stripNSForUtype(curField.getUtype().trim());
             curUCD = curField.getUcd();
             if(    curUtype.equalsIgnoreCase(UTYPE_ACREF_SSA) && ! curUCD.equalsIgnoreCase(SIAP_URL)
@@ -315,9 +313,8 @@
         if( firstRes.getTableCount()>0 ) {
         	FieldSet fSet = firstRes.getFieldSet(0);
         	if( fSet!=null && fSet.getItems()!=null ) {
-        		Enumeration e = fSet.getItems().elements();
-        		while( e.hasMoreElements() ) {
-        			if( ((SavotField)e.nextElement()).getUtype().equalsIgnoreCase(FOOTPRINT_REF_UTYPE) ) {
+        		for( Iterator i = fSet.getItems().iterator(); i.hasNext(); ) {
+        			if( ((SavotField)i.next()).getUtype().equalsIgnoreCase(FOOTPRINT_REF_UTYPE) ) {
         				type = SIAP_EXT;
         				return;
         			}
