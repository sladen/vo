Description: Updated HEALPix import
 The modification in the HEALPix sources to rename the directory "core"
 to "essentials" has to be taken into account by Aladin.
Origin: http://cds.u-strasbg.fr/resources/doku.php?id=moc
Author: Florian Rothmaier <gavo@ari.uni-heidelberg.de>
--- a/cds/tools/pixtools/CDSHealpix.java
+++ b/cds/tools/pixtools/CDSHealpix.java
@@ -19,11 +19,11 @@
 
 package cds.tools.pixtools;
 
-import healpix.core.HealpixBase;
-import healpix.core.Pointing;
-import healpix.core.Scheme;
-import healpix.core.Vec3;
-import healpix.core.base.set.LongRangeSet;
+import healpix.essentials.HealpixBase;
+import healpix.essentials.Pointing;
+import healpix.essentials.RangeSet;
+import healpix.essentials.Scheme;
+import healpix.essentials.Vec3;
 import healpix.tools.SpatialVector;
 
 import java.util.ArrayList;
@@ -61,7 +61,7 @@
    static public long[] query_disc(long nside,double ra, double dec, double radius, boolean inclusive) throws Exception {
       SpatialVector vector = new SpatialVector(ra,dec);
       int order = init(nside);
-      LongRangeSet list = hpxBase[order].queryDisc(new Pointing(vector),radius,inclusive);
+      RangeSet list = hpxBase[order].queryDisc(new Pointing(vector),radius);
       if( list==null ) return new long[0];
       return list.toArray();
    }
@@ -76,14 +76,14 @@
       int order = init(nside);
       Pointing[] vertex = new Pointing[vlist.size()];
       for (int i=0; i<vlist.size(); ++i) vertex[i]=new Pointing((Vec3)vlist.get(i));
-      LongRangeSet list = hpxBase[order].queryPolygon(vertex,true);
+      RangeSet list = hpxBase[order].queryPolygon(vertex);
       if( list==null ) return new long[0];
       return list.toArray();
    }
    
    static final private int [] A = { 3, 2, 0, 1 };
    static public double[][] corners(long nside,long npix) throws Exception {
-      Vec3[] tvec = hpxBase[ init(nside) ].corners(npix,1);
+      Vec3[] tvec = hpxBase[ init(nside) ].boundaries(npix,1);
       double [][] corners = new double[tvec.length][2];
       for (int i=0; i<tvec.length; ++i) {
          SpatialVector v = new SpatialVector(tvec[i]);
@@ -95,7 +95,7 @@
    }
    
    static public double[][] borders(long nside,long npix,int step) throws Exception {
-      Vec3[] tvec = hpxBase[ init(nside) ].corners(npix,step);
+      Vec3[] tvec = hpxBase[ init(nside) ].boundaries(npix,step);
       double [][] borders = new double[tvec.length][2];
       for (int i=0; i<tvec.length; ++i) {
          SpatialVector v = new SpatialVector(tvec[i]);
